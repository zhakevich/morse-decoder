const MORSE_TABLE = {
  '.-': 'a',
  '-...': 'b',
  '-.-.': 'c',
  '-..': 'd',
  '.': 'e',
  '..-.': 'f',
  '--.': 'g',
  '....': 'h',
  '..': 'i',
  '.---': 'j',
  '-.-': 'k',
  '.-..': 'l',
  '--': 'm',
  '-.': 'n',
  '---': 'o',
  '.--.': 'p',
  '--.-': 'q',
  '.-.': 'r',
  '...': 's',
  '-': 't',
  '..-': 'u',
  '...-': 'v',
  '.--': 'w',
  '-..-': 'x',
  '-.--': 'y',
  '--..': 'z',
  '.----': '1',
  '..---': '2',
  '...--': '3',
  '....-': '4',
  '.....': '5',
  '-....': '6',
  '--...': '7',
  '---..': '8',
  '----.': '9',
  '-----': '0',
};

function decode(expr) {
  const result = []; // массив для результата
  while (expr.length > 0) {
    // пока длина строки больше 0 => продолжаем   декодировать    буквы
    let str = expr.slice(0, 10); // добавляем в массив первые 10 символов из строки
    let letter = ''; // переменная для буквы
    let sign = ''; // переменная для знака
    for (let i = 0; i < str.length; i++) {
      // пробегаем по первым 10 символам
      sign += str[i]; // добавляем в переменную знак
      if (sign === '10') {
        // если знак равен 10
        letter += '.';
        sign = '';
        continue;
      } else if (sign === '11') {
        // если знак равен 11
        letter += '-';
        sign = '';
        continue;
      } else if (sign === '00') {
        // если знак равен 00
        sign = '';
        continue;
      }
    }
    expr = expr.slice(10); // обрезаем первые 10 символов из строки
    result.push(letter); // добавляем в массив букву
  }

  return result.reduce((before, key) => {
    // преобразуем массив в строку
    return (before += key === '' ? ' ' : MORSE_TABLE[key]); // если буква пустая, добавляем пробел
  }, '');
}

module.exports = {
  decode,
};
